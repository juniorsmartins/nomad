plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

description = "Gerencia livro-caixa e registros financeiros de entrada e saída."
group = 'com.example'
version = '0.0.1-SNAPSHOT'

apply from: 'gradle/config/source-sets.gradle' // o source-sets precisa vir antes do config - primeiro source-sets.
apply from: 'gradle/config/config.gradle' // Segundo: configura extensões
apply from: 'gradle/config/task.gradle' // Terceiro: define tarefas

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Data Jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Bean Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Migration
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	// Monitoramento e Observabilidade
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.13.2'

	// Conversão MapStruct
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Database
	runtimeOnly 'org.postgresql:postgresql'

	// Mensageria - Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// ---------- TESTES ----------

	// Tests - Cucumber
	implementation 'io.cucumber:cucumber-java:7.21.0'
	testImplementation 'io.cucumber:cucumber-junit:7.21.0'
	testImplementation 'io.cucumber:cucumber-spring:7.21.0'

	// Test - ambiente de banco de dados
	testImplementation 'com.h2database:h2:2.3.232'

	// Test
	testImplementation 'io.rest-assured:rest-assured:5.5.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Define estratégia de comportamento frente a resources duplicados - applications
tasks.withType(Copy).all {
	duplicatesStrategy = 'exclude'
}

