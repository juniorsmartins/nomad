server:
  port: ${SERVER_PORT:9201}

spring:

  application:
    name: accounting

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:accounting}?serverTimezone=UTC
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    sql-script-encoding: UTF-8
    characterEncoding: UTF-8
    hikari:
      pool-name: poll_accounting
      maxLifetime: 1800000
      connection-timeout: 40000
      #      idle-timeout: 300000 # Nao possui efetividade quando usado com maximum-pool-size fixo.
      maximum-pool-size: 2

  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        type:
          enumType:
            type: pgsql_enum
        jdbc:
          log:
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
    show-sql: true

management: # Este bloco define as configurações de gerenciamento da sua aplicação. Ele controla quais endpoints de gerenciamento estão disponíveis e como eles podem ser acessados.
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name} # Faz o micrometer organizar as métricas unificadas por nome de microsserviço

